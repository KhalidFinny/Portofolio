---
import "../styles/global.css";
import Navbar from "./Navbar.astro";
import { supabase } from '../SupabaseClient';

// Fetch Programming projects from Supabase (server-side rendering)
const { data: programmingData, error } = await supabase
  .from('Programming')
  .select('*')
  .order('created_at', { ascending: false });

if (error) {
  console.error('Error fetching Programming data:', error);
}
---

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Programming Portfolio</title>
    <link rel="stylesheet" href="../styles/global.css">
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&display=swap" rel="stylesheet">
    <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
</head>
<body class="bg-custom-white" x-data="{
    programmingData: [],
    isLoading: true,
    init() {
        try {
            const data = JSON.parse(`{{ JSON.stringify(programmingData || []) }}`);
            this.programmingData = data;
        } catch (error) {
            console.error('Error parsing programming data:', error);
            this.programmingData = [];
        }
        this.isLoading = false;
    }
}">
    <Navbar />

    <!-- Header -->
    <header class="max-w-6xl mx-auto p-8">
        <h1 class="text-4xl font-bold text-custom-black mb-4 font-playfair">Programming</h1>
        <p class="text-lg text-custom-black font-montserrat">All of my programming projects</p>
    </header>

    <!-- Projects Grid -->
    <main class="max-w-6xl mx-auto p-8">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
            <!-- Loading state -->
            <template x-if="isLoading">
                <div class="col-span-2 text-center">
                    <p class="text-custom-black font-montserrat">Loading projects...</p>
                </div>
            </template>

            <!-- Render projects using Alpine.js -->
            <template x-if="!isLoading && programmingData.length > 0">
                <template x-for="project in programmingData" :key="project.id">
                    <div class="project-container bg-white rounded-lg overflow-hidden border border-custom-gold">
                        <div class="p-6 border-b border-custom-gold">
                            <h2 class="text-2xl font-bold text-custom-black mb-2 font-montserrat" x-text="project.Title"></h2>
                            <p class="text-sm text-custom-pink mb-2 font-montserrat">
                                Type: <span x-text="project.Type || 'No type specified'"></span>
                            </p>
                        </div>
                        <div class="p-6">
                            <template x-if="project.image_url">
                                <img :src="project.image_url" :alt="project.Title" class="w-full h-48 object-cover mb-4" />
                            </template>
                            <template x-if="!project.image_url">
                                <p class="text-custom-black font-montserrat">No images available for this project.</p>
                            </template>
                        </div>
                    </div>
                </template>
            </template>

            <!-- Show this message if no projects are found -->
            <template x-if="!isLoading && programmingData.length === 0">
                <p class="text-custom-black font-montserrat">No projects found.</p>
            </template>
        </div>
    </main>
</body>
</html>